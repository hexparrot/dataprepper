#!/bin/bash

# Directories
INPUT_DIR=$1
OUTPUT_DIR=$2

# Check input arguments
if [[ -z "$INPUT_DIR" || -z "$OUTPUT_DIR" ]]; then
  echo "Usage: $0 <input_dir> <output_dir>"
  exit 1
fi

# Create the output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Declare a counter to track processed files
declare -i file_count=0

# Process each .htm, .html, .json, or .csv file in the input directory recursively
find "$INPUT_DIR" -type f \( -iname '*.htm' -o -iname '*.html' -o -iname '*.json' -o -iname '*.csv' -o -iname '*.xml' \) -print0 | while IFS= read -r -d '' file; do
  echo "==========================================="
  echo "Processing: $file"

  # Determine file type and corresponding flag for `parse_plays`
  if [[ "$file" == *.json ]]; then
    parse_flag="--json"
  elif [[ "$file" == *.csv ]]; then
    parse_flag="--csv"
  elif [[ "$file" == *.xml ]]; then
    parse_flag="--xml"
  else
    parse_flag="--html"
  fi

  # Generate a unique output file name
  output_file="$OUTPUT_DIR/plays-$(printf "%03d" "$file_count").json"
  file_count+=1  # Increment after assigning filename

  # Use parse_plays with the correct flag
  if cat "$file" | ./parse_plays "$parse_flag" > "$output_file"; then
    echo " -> Successfully processed: $file"
    echo " -> Output written to: $output_file"
  else
    echo " -> Failed to process: $file"
    rm -f "$output_file"  # Remove incomplete output on failure
  fi

  echo "-------------------------------------------"
done

echo "==========================================="
echo "All .json, .htm, .html, and .csv files have been processed."
echo "Output files are in '$OUTPUT_DIR'"
echo "==========================================="

